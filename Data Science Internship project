import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn import metrics

url = "http://bit.ly/w-data"
s_data = pd.read_csv(url)
print("Data imported successfully")
print(s_data)
s_data.plot(x='Hours', y='Scores', style='x')
plt.title('Hours vs Percentage')
plt.xlabel('Hours Studied')
plt.ylabel('Percentage Score')
plt.show()

X = s_data.iloc[:,:-1].values
y = s_data.iloc[:,1].values
X_train, X_test, y_train, y_test = train_test_split(X, y,test_size=0.2, random_state=0)
regressor = LinearRegression()
regressor.fit(X_train, y_train)
print("Training complete.")
# Plotting the regression line
line = regressor.coef_*X+regressor.intercept_
# Plotting for the test data
plt.scatter(X, y)
plt.plot(X, line);
plt.title('Hours vs Percentage')
plt.xlabel('Hours Studied')
plt.ylabel('Percentage Score')
plt.show()

# Predicting the score
y_pred = regressor.predict(X)
# Comparing Actual vs Predicted
df = pd.DataFrame({'hours': s_data.Hours,'Actual': y, 'Predicted': y_pred})
print(df)
print('Mean Absolute Error:',metrics.mean_absolute_error(y, y_pred))
hours=[[9.25]];
own_pred=regressor.predict(hours);
print("No.of Hours = {}".format(hours[0]))
print("Predicted Score = {}".format(own_pred[0]))
